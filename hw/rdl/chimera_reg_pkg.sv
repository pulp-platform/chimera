// Copyright 2025 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2 0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package chimera_reg_pkg;

  localparam CHIMERA_REG_TOP_DATA_WIDTH = 32;
  localparam CHIMERA_REG_TOP_MIN_ADDR_WIDTH = 7;
  localparam CHIMERA_REG_TOP_SIZE = 'h70;

  localparam NumClusters = 'h5;

  typedef struct {
    logic [31:0] value;
  } chimera_regs_NumClusters_5__snitch_boot_addr__SNITCH_BOOT_ADDR__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__snitch_boot_addr__SNITCH_BOOT_ADDR__out_t SNITCH_BOOT_ADDR;
  } chimera_regs_NumClusters_5__snitch_boot_addr__out_t;

  typedef struct {
    logic [31:0] value;
  } chimera_regs_NumClusters_5__snitch_configurable_boot_addr__SNITCH_CONFIGURABLE_BOOT_ADDR__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__snitch_configurable_boot_addr__SNITCH_CONFIGURABLE_BOOT_ADDR__out_t SNITCH_CONFIGURABLE_BOOT_ADDR;
  } chimera_regs_NumClusters_5__snitch_configurable_boot_addr__out_t;

  typedef struct {
    logic [31:0] value;
  } chimera_regs_NumClusters_5__snitch_intr_handler_addr__SNITCH_INTR_HANDLER_ADDR__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__snitch_intr_handler_addr__SNITCH_INTR_HANDLER_ADDR__out_t SNITCH_INTR_HANDLER_ADDR;
  } chimera_regs_NumClusters_5__snitch_intr_handler_addr__out_t;

  typedef struct {
    logic [31:0] value;
  } chimera_regs_NumClusters_5__snitch_cluster_return__SNITCH_CLUSTER_RETURN__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__snitch_cluster_return__SNITCH_CLUSTER_RETURN__out_t SNITCH_CLUSTER_RETURN;
  } chimera_regs_NumClusters_5__snitch_cluster_return__out_t;

  typedef struct {logic value;} chimera_regs_NumClusters_5__reset_cluster__RESET_CLUSTER__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__reset_cluster__RESET_CLUSTER__out_t RESET_CLUSTER;
  } chimera_regs_NumClusters_5__reset_cluster__out_t;

  typedef struct {
    logic value;
  } chimera_regs_NumClusters_5__cluster_clk_gate_en__CLUSTER_CLK_GATE_EN__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__cluster_clk_gate_en__CLUSTER_CLK_GATE_EN__out_t CLUSTER_CLK_GATE_EN;
  } chimera_regs_NumClusters_5__cluster_clk_gate_en__out_t;

  typedef struct {
    logic value;
  } chimera_regs_NumClusters_5__wide_mem_cluster_bypass__WIDE_MEM_CLUSTER_BYPASS__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__wide_mem_cluster_bypass__WIDE_MEM_CLUSTER_BYPASS__out_t WIDE_MEM_CLUSTER_BYPASS;
  } chimera_regs_NumClusters_5__wide_mem_cluster_bypass__out_t;

  typedef struct {logic value;} chimera_regs_NumClusters_5__cluster_busy__CLUSTER_BUSY__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__cluster_busy__CLUSTER_BUSY__out_t CLUSTER_BUSY;
  } chimera_regs_NumClusters_5__cluster_busy__out_t;

  typedef struct {
    chimera_regs_NumClusters_5__snitch_boot_addr__out_t              snitch_boot_addr;
    chimera_regs_NumClusters_5__snitch_configurable_boot_addr__out_t snitch_configurable_boot_addr;
    chimera_regs_NumClusters_5__snitch_intr_handler_addr__out_t      snitch_intr_handler_addr;
    chimera_regs_NumClusters_5__snitch_cluster_return__out_t         snitch_cluster_return[5];
    chimera_regs_NumClusters_5__reset_cluster__out_t                 reset_cluster[5];
    chimera_regs_NumClusters_5__cluster_clk_gate_en__out_t           cluster_clk_gate_en[5];
    chimera_regs_NumClusters_5__wide_mem_cluster_bypass__out_t       wide_mem_cluster_bypass[5];
    chimera_regs_NumClusters_5__cluster_busy__out_t                  cluster_busy[5];
  } chimera_regs__out_t;
endpackage
